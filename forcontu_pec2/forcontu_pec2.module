<?php

/**
 * @file
 * Contains forcontu_pec2.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\node\NodeInterface;

/**
 * Implements hook_help().
 */
function forcontu_pec2_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the forcontu_pec2 module.
    case 'help.page.forcontu_pec2':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Module Forcontu Pec 2') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_ENTITY_TYPE_insert() for node entities.
 */
function forcontu_pec2_node_insert(NodeInterface $node) {
  $entityType = $node->getType();
  $entityId = $node->id();
  $userId = \Drupal::currentUser()->id();
  $points = \Drupal::service('plugin.manager.grant_points')->createInstance('node_create');
  $points->grant($entityType, $entityId, $userId);
}

//Vaciamos la caché render
\Drupal::cache('render')->deleteAll();

/**
 * Implements hook_ENTITY_TYPE_update() for node entities.
 */
function forcontu_pec2_node_update(NodeInterface $node) {
  $userId = \Drupal::currentUser()->id();
  $node_author = $node->getOwnerId();
  if ($userId != $node_author) {
    $entityType = $node->getType();
    $entityId = $node->id();
    $points = \Drupal::service('plugin.manager.grant_points')->createInstance('node_edit');
    $points->grant($entityType, $entityId, $userId);
  }
  
  //Vaciamos la caché render
  \Drupal::cache('render')->deleteAll();
}

/**
 * Implements hook_ENTITY_TYPE_delete() for node entities.
 */
function forcontu_pec2_node_delete(NodeInterface $node) {
  $entityId = $node->id();
  $points = \Drupal::service('plugin.manager.grant_points')->createInstance('node_delete');
  $points->grant(NULL, $entityId, NULL);
  
  //Vaciamos la caché render
  \Drupal::cache('render')->deleteAll();
}